ToDo list:

-> General:
- update to processing 1.1 -> bitmapfont working?
- make standalone executable MT4j MTShell distribution/installer on windows
- integrate with SWING?
- make class DrawTools/GeomTools/GLTools and put stuff from Tools3D in there

- enable a way so that even if input starts on a components the input can be redirected/replayed to another (parent or below) 
  so that if the comp doesent handle the gesture, the parent can use it (example: start zoom, even if not the background was hit)
  => or do with global processors?
  => example, component with 2 children; children are tappable but when dragging on either children the component should
     move, not the child whos dragged -> send evt to parent

- let all implementations of processInputEvent return false by default (->not consumed), or true-> for handled?

- dont save vertices if we are in opengl -> we have to save vertices+we create new floatbuffers = 2*memory!
	-> save only buffers and at getVerticesLocal -> create vertices from buffer -> not needed often
	-> at setUseDirectGL(false) -> delete buffers and use vertices

- shapes example, line, polyine(polygon not closed), custom shapes with bezier, concave shapes with triangulation
- gui, widgets example
- how to create own component example
- how to create own gesture example
- brainstorm example - textareas + draw links!

- mt4j as p5 library - difficult because mtapplication is derived from papplet
- manymouse problem loadlibrary!? -> Compile on Mac!
- remove MTVideoClip from core and put it into example with gsvideo and gstreamer?
- update to latest GSVideo/GStreamer
- add sound library (OpenAL?)
- by default disable depth buffer and only for special 3d stuff enable it?
- check if for line_smooth disabling/enabling multisampling is too expensive - if so disable/dont use line_smooth when multisampling at all 
- create small test suite (transformation tests, get centerpoint ect)
- framework for component persistation (X-Stream?)
- put perspective and viewport into MTCamera (?)
- (Use nanotimer or currentmillis to update and animations? -> nano has more precision but has problems on some systems(?))
- Central TextureManager/Ogl resource manager that tracks the opengl texture ids and deletes them if not needed anymore
- (a new MT4JTexture class/interface which internally creates a processing or opengl texture - the mixture make problems)
- (save trans/rot/scale separately, not in a single matrix and compose matrix b4 each draw -> not orthogonalization req.)
- (dropshadows - with custom created pimage?)
- (bug when drawing outline after clipping on frustum culled object, dont draw outline then!)
- (instead of String "fileName" use URLs? but p5 works with strings..)
- (b4 picking, check if object visible? - update cam - check if obj in frustum)
- (particles not working in fullscreen (fluidscene))? -> cuz of depth buffer and p5 drawing (p5 drawing and pure opengl mix -> z-problems)
- (use render bins and sort object automagically (2d, 3d, Hud, transparent))? 
- (make class SceneDrawIterator? that implements the drawAndUpdateCanvas of MTCanvas so it can be called for single nodes to draw nodes with all children)


-> Components:
- add ShapeGroup component that offers methods like getCenterPoint and getWidth etc taking child shapes into account
- at clipping check if clipshape would be screen aligned rect -> use glScissor instead if stencil buffer -> performance!
- create generic gradientPaint FillPaints to use with setFillPaint() - will only work with AbstractShapes..
- make setEnableTransformStateEvents -> fire stateChangeEvts if transformed in any way (but children are also moved, fire also..?)
- find a way to determine if a geometryinfo is shared or not -> if not -> delete displayLists!!
- at setters make boolean parameter recurseChildren to also apply it to children?
- sprite component with acceleration/velocity/collision/ animatable with textures?
- store Vertices only in floatBuffers instead of buffers+array to reduce memory consumption? (test if it matters)
- use push/popattrib at drawing? -> speed up drawing -> externalize rendering? (ie. renderer.renderBuffers(..));
- make propertychange listener/events in MTComponent? (useful in many components)
- add more gui elements -> sperate model | view(setUIDelegate) (MTCheckbox)
- Keyboard internationalize -> xml?
- switch in abstractshape to draw boundingshape
- test if frustum culling working when canvas scaled? camera zoomed etc?
- record displaylists with drawComponent() method instead of Tools3D.generateDisplist..
- (remove or rework circlemenu)
- (implement color picking for performance?)
- (use bitmapfont in mtprogressbar)
- (make mtmovieclip display the start frame at loading, nicen up ui, add pause button etc)
- (periodically orthogonalize the local matrix?)
- (combine appearance -> material, texture, smoothing, colors, lights etc)


-> Online:
- mention component state changes/listeners in component tutorial
- features -media supports, jpg,png,avi etc
- at mutlitouch gestures page add link to java doc processor?
- Component structure
- Gestures: 
	- tapAndHold
	- Arcball
- Examples:
	- new pictures for gestures, water, shell example	
- Faq: 
	- faq: how to get the best visual quality: use v_sync, use multisample,
	- how to use MTVideo -> how to install GStreamer (Windows, Linux, OSx)
- Troubleshooting section
	- not working with netbeans/other IDE -> probably Jogl natives wrong -> add "-Djava.library.path=C:\pathToMT4j" to VM Arguments
- Tutorials: 
	- how to create a 2d overlay
	- how to best deploy your mt application (Jars, Files + Directory structure, FatJar)
	- scene graph, example, component hierarchy image, default camera, z direction out of screen
	- how to create my own components (extend which class, intersection etc)
	- how to create my own gesture/evt -> sometimes we dont need new processor, can use existing (Drag->flick->gesturelistner)
	- how to work with components/shapes (boundings, clipping, rot/trans/scale, addchild, color, displaylist, outline) -setUseDirectGL/list/VBO!
	- animations
	- working with text - vector/bitmap fonts (dont create too many->memory, reuse vector fonts and scale them etc, vector looks ugly when small -> use bitmap there!)
	- working with widgets
- Download packages


-> MTSceneWindow/MTWindow:
- how to deal with init() shutdown()? 
- (make fbo /texture power of two but use texcoords to fit)


-> Typography:
- we can switch the textcolor on textarea draw code instead of creatin different memoryhungry fonts
- add and implement setCursorPos() in MTTextArea
- add setText()/setLabel() to buttons
- (make bitmapfontfactory create the same size fonts as the ttf/svg factories, there is a difference now - fixed, but fontascent's different?)
- (store scale information in every fontcharacter, but only change current matrix if new scale different from last)


-> Gestures/Input
- GestureUtil class? -> getDistance(cursor1, cursor2) getAngle(cursor1, movedCursor); etc
- Test if intalled multitouch vista driver + win7 touch screen make problems
- more gestures: double tap, flick(? velocity, straightness)
- Win7 Input -> get and store blobsize
- Change Tap&Hold gesture behaviour to match Windows -> send gesture_ended only if finger lifted, not if time is up
- Win7Input source -> use getActiveWindow() -> reject windows Tap and HOld gestures -> set TWF_WANTPALM at registerTouchwindow or not? -> TEST! ->http://social.msdn.microsoft.com/Forums/en/tabletandtouch/thread/2a173296-49b6-4f25-860f-953ae6038857
- add GenericTwoFingerGesture that delivers the touch points on the drag-plane -> methods for getLastRotation etc
- at tapProcessor - when one cursor stolen by higher priority, abort tap without chance of resume -> else comp with tap+scale triggers tap after scale ended
- at mouseinputsource send mouseInputEvt extends mtinputposEvt/MTFingerInputEvt -> attach mouse button information for pure mouse applications
- resume some gestures only if the cursor is still on the object -> else abort -> make abortGesture() method in all processors!
- simplify writing of gestures
- implement logically meaningful returns of boolean processInputEvent() - when return true, when false, how to react?
- add keyboard input source sending keyboard events to the focused/selected component -> FocusManager?
- (if object that is dragged, scaled etc is destroyed while during gesture -> nullpointer error)
- (background rotate gesture? -> not good, would rotate about center of cam.. -> better use MTComp at z=0 with rotateProcessor!)


-> SVG:
- make loading threaded by doing it in an abstractprogessthread
- linestipple in svgs not working (nested.svg)?
- (we could make the creation elements generic by calling a registered class (callback) (i.e. svgLoader.getPathImpl().getGFXElement()))
- (check arcTo endpoint parametrization method. is there a bug? - check arcs example at w3.org)
- (group opacity?)


-> Scenes:
- more transition effects
- rename init() and shutdown() to "onEnter()" and "onLeaving()"?
- add a generic scene loading scene?


-> Animations:
- AnimationUtil static -> fadeOut(component) fadeIn() etc
- simplify usage of animations, make subclasses for easinganimation (-> use reflection to set properties automatically? -lookat pulcore)
- implement keyframe animations - TimeLine?
- use p5 tweening library?
- animation with pluggable/extendable interpolation function


-> Bounding:
- boundingshape intersection tests - sphere/sphere/ sphere/box/rect (-draw() and update() sperarate again?)
- add logic and code for boundingshape merging (child needs to inform parents if bounds changed ->reMerge) (use physics enginge for that?)